---
title: "Introdução ao HTML"
author: "Jeanne Franco"
format: html
editor: visual
date: today
lang: pt
---

## Introdução

Uma página web é capaz de interpretar um código HTML e renderizá-lo de forma compreensível para o leitor exibindo textos, botões, abas, etc. através das configurações das tags dessa linguagem de marcação. Atualmente o HTML encontra-se na versão 5.

## Estrutura básica de uma página em HTML

Abaixo no código estão apresentados as principais tags utilizadas para produzir um documento HTML e para que eles seja corretamente interpretado pelos browsers.

``` r
<!DOCTYPE html>
<html>
<head>
<meta charset="UTF-8"/>
<title>Document</title>
</head>
<body>
<!-- Conteúdo -->
</body>
</html>
```

**Linha 1:** a instrução **`DOCTYPE`** deve ser a primeira a aparecer no código para indicar a versão do HTML, neste caso usamos a versão atual HTML5.

**Linhas 2 e 10:** todo código HTML deve ter a abertura e o fechamento, portanto, abrimos o código com **`<html>`** e fechamos com **`</html>`**. Todas as demais tags ficam dentro desse espaço.

**Linhas 3 e 6:** abertura e fechamento da tag **`head`** que define o cabeçalho do documento. O conteúdo nesse espaço não é visualizado no browser, apenas contém instruções do seu conteúdo. Dentro dessa tag podem ser definidos o estilo do documento e o script.

**Linha 4:** a tag **`meta`** especifica o conjunto de caracteres que serão usados para renderizar o texto da página. O UTF-8 contém todos os caracteres dos padrões Unicode e ASCII, sendo, portanto, o mais utilizado.

**Linha 5:** a tag **`title`** define o título da página. Ele aparecerá na janela/aba do navegador.

**Linhas 7 e 9:** abertura e fechamento da tag **`body`**, no qual será apresentado todo o conteúdo da página no browser. Nesse intervalo ficarão as tags que representam os títulos, textos, botões, etc.

**Linha 8:** essa linha apresenta a sintaxe que pode ser usada para adição de comentários, ele não aparecerá no browser.

```         
!-- Conteúdo -->
```

Para desenvolver páginas com conteúdo HTML podem ser usados editores de texto como bloco de notas do Windows, Nano e Emacs do Linux. Outros editores mais avançados com sintaxe highlight e autocomplete também são usados e auxiliam nos códigos os tornando mais fáceis de serem compreendidos, como exemplos tem os Sublime Text, Atom, Brackets, RStudio e Visual Studio Code.

## Tags do HTML

As tags de um documento HTML são representadas por nomes específicos que aparecem entre os sinais **`<`** e **`>`**. Algumas tags precisam ser abertas e fechadas, ao ser fechada é necessário utilizar uma barra, por exemplo, **`</body>`**. A tag **`meta`** não precisa ser fechada.

## Cabeçalhos do HTML

Os cabeçalhos são usados para identificar páginas e seções, eles possuem aparência diferenciada do restante do texto. Há seis níveis de cabeçalhos/títulos que são usados pelas tags **`h1`**, **`h2`**, **`h3`**, **`h4`**, **`h5`** e **`h6`**.

::: {.callout-note appearance="simple"}
De acordo com as regras de SEO, é recomendado que uma página possua apenas uma tag `<h1>` que indique seu assunto, pois essa tag informa aos motores de busca qual sua principal palavra-chave.
:::

Acrescente o seguinte código na linha 8 da primeira listagem desse documento e veja a renderização em um browser.

``` r
<h1>Título de nível 1</h1>
<h2>Título de nível 2</h2>
<h3>Título de nível 3</h3>
<h4>Título de nível 4</h4>
<h5>Título de nível 5</h5>
<h6>Título de nível 6</h6>
```

## Parágrafos do HTML

Os parágrafos em um documento HTML são gerados pelas tags **`<p>`** e **`</p>`**. Os parágrafos serão dispostos na tela em forma de blocos um abaixo do outro.

Use o código abaixo e adicione na linha 8 da primeira listagem desse documento.

``` r
<p>Primeiro parágrafo do texto.</p>
<p>Segundo parágrafo do texto.</p>
<p>Terceiro parágrafo do texto.</p>
```

## Imagens no HTML

A inserção de imagens no HTML é feita através da tag **`img`**, que recebe no atributo **`scr`** o endereço do arquivo a ser carregado. Outros atributos são o **`alt`** que apresenta um texto alternativo caso a imagem não seja carregada e o **`title`** que é mostrado quando colocamos o cursos em cima da imagem.

O código abaixo mostra a inserção da imagem **`avatar.jpg`**, que deve estar localizada na mesma pasta do arquivo HTML. Acrescente ao código do primeiro exemplo para visualizar a figura.

``` r
<img src="avatar.png" alt="Texto alternativo" title="Avatar" />
```

Além da tag **`img`**, também são utilizadas as tags **`figure`** para abrir e fechar o código de uma imagem e a tag **`figcaption`** para adicionar uma legenda na figura. Veja o código abaixo:

``` r
<figure>
   <img src="http://meusite.com.br/assets/imagem.jpg" alt="Imagem">

   <figcaption>Legenda da figura 1</figcaption>
</figure>
```

## Links no HTML

Os links adicionados são feitos para direcionar o leitor para outra página da internet ou para partes da mesma página. Nesses casos é utilizada a tag **`a`**, que possui o atributo **`href`** que irá indicar o destino do link.

O código abaixo mostra a direção para a página do meu blog. Acrescente esse código ao primeiro exemplo dessa página. Lembre-se que ele deve ser adicionado dentro da aba **`body`**.

``` r
<a href="https://jeannefrancojra.quarto.pub/">Blog</a>
```

No código abaixo é mostrado como adicionar um link que direciona para um ponto da mesma página. Pode ser utilizado para direcionar para notas de rodapé.

``` r
<a href="#Nota de rodapé.">Ir para a nota de rodapé</a>
<!--outros elementos-->
<p id="Nota de rodapé.">Parágrafo no rodapé.</p>
```

Note que o elemento **`href`** requer o sinal de serquilha (**`#`**).

## Tabelas no HTML

As tabelas são elementos que serão organizados em linhas e colunas. No HTML elas são criadas com três tags: **`table`** para delimitar a tabela, **`tr`** (table row) para indicar as linhas, e **`td`** para indicar as colunas (table data). O código a seguir mostra um exemplo de tabela do HTML com três linhas e duas colunas. Acrescente ao exemplo desse documento e veja o resultado.

``` r
<table>
<tr>
<td>Linha 1, Coluna 1</td>
<td>Linha 1, Coluna 2</td>
</tr>
<tr>
<td>Linha 2, Coluna 1</td>
<td>Linha 2, Coluna 2</td>
</tr>
<tr>
<td>Linha 3, Coluna 1</td>
<td>Linha 3, Coluna 2</td>
</tr>
</table>
```

Existem ainda três tags que podem ser adicionadas ao código para delimitar e organizar a tabela. O **`thead`** é usado para o cabeçalho; o **`tbody`** para o corpo e o **`tfoot`** para uma nota de rodapé. Veja o resultado usando o código abaixo no exemplo do documento.

``` r
<table>
<thead>
<tr>
<th>Produto</th>
<th>Preço</th>
<th>Quantidade</th>
</tr>
</thead>
<tbody>
<tr>
<td>Feijão</td>
<td>R$ 8,75</td>
<td>1</td>
</tr>
<tr>
<td>Arroz</td>
<td>R$ 4,99</td>
<td>2</td>
</tr>
</tbody>
<tfoot>
<tr>
<td>Total</td>
<td></td>
<td>R$ 18,73</td>
</tr>
</tfoot>
</table>
```

::: {.callout-note appearance="simple"}
Por padrão, as tabelas não possuem bordas. Isso deve ser adicionado por meio das CSS.
:::

## Listas no HTML

As listas servem para organizar e ordenar itens relacionados entre si. No HTML podemos criar três tipos de listas: ordenadas com uso do **`o1`**, não ordenadas com a tag **`ul`** e de definição com a tag **`d1`**. Observe nos códigos a seguir que cada item das listas é definido pela tag **`li`**.

``` r
<ol>
<li>Item 1</li>
<li>Item 2</li>
<li>Item 3</li>
</ol>
```

``` r
<ul>
<li>Item 1</li>
<li>Item 2</li>
<li>Item 3</li>
</ul>
```

Copie e cole os códigos no link do site abaixo para ver o resultado.

::: {.callout-note appearance="simple"}
[Site para praticar HTML](https://jsfiddle.net/vs41kusf/). Clique no botão **`run`** para correr o código.
:::

Para as listas ordenadas também temos o atributo **`type`** que permite especificar o tipo de marcador a ser usado: números padrão, números romanos e letras.

``` r
<ol type="I">
<li>Item 1</li>
<li>Item 2</li>
<li>Item 3</li>
</ol>
```

Os valores permitidos usam os seguintes tipos de numeração:

-   1 - números (padrão)

-   i - números romanos minúsculos

-   I - números romanos maiúsculos

-   a - letras minúsculas

-   A - letras maiúsculas

As listas de definição tem um comportamento diferente, uma vez que cada item é composto por um título (**`dt`**) e uma definição (**`dd`**), semelhante ao que ocorre em dicionários. Na listagem abaixo temos esse tipo de exemplo. Utilize o site do HTML para ver o resultado.

``` r
<dl>
<dt>Título 1</dt>
<dd>Definição 1</dd>
<dt>Título 2</dt>
<dd>Definição 2</dd>
<dt>Título 3</dt>
<dd>Definição 3</dd>
</dl>
```

## Formulários no HTML

Formulários são utilizados para integrar a página HTML a algum processamento no lado servidor. Nesses casos, a página envia dados para uma aplicação (Java, PHP, .NET etc.) que recebe, trata e retorna um resultado.

No HTML usamos a tag **`form`** para delimitar a área na qual se encontram os campos a serem preenchidos pelo usuário, a fim de serem enviados para processamento no back-end (a página HTML é chamada de front-end de aplicação).

Abaixo é mostrado um exemplo de formulário com vários tipos de campo para entrada de dados e botões para submeter os dados ao servidor. Utilize o site do HTML para ver o resultado.

``` r
<form action="salvar_dados.php" method="post">
<input type="text" placeholder="Digite aqui"> <br/>
<input type="checkbox">Checkbox <br/>
<input type="radio">Radio button <br/>
<input type="range"> <br/>
<input type="submit" value="Enviar">
</form>
```

## Formatação de texto

As tags de formatação de texto servem para destacar algumas palavras da página HTML. Veja as principais tags utilizadas:

-   **`b`** e **`strong`** para negrito/texto forte;

-   **`i`** e **`em`** para itálico/ênfase;

-   **`sup`** e **`sub`** para sobrescrito e subscrito, respectivamente;

-   **`ins`** e **`del`** para indicar trechos que foram incluídos ou removidos, respectivamente;

-   **`small`** para textos menores que o padrão;

-   **`mark`** para texto destacado.

Veja no código abaixo como essas tags são utilizadas e verifique no site do HTML os resultados desse código.

``` r
<p>Texto em negrito com <b>bold</b> e <strong>strong</strong>.</p>
<p>Texto em itálico com <i>italics<i> e <em>emphasis</em>.</p>
<p>Texto <sup>sobrescrito</sup> e <sub>subscrito</sub>.</p>
<p>Texto <ins>inserido</ins> e <del>excluído</del>.</p>
<p>Texto <small>pequeno</small> e <mark>destacado</mark>.</p>
```

::: {.callout-note appearance="simple"}
Apesar da tag **`<b>`** e **`<strong>`** terem resultados visualmente idênticos, eles têm usos diferentes. A tag **`<b>`** deve ser utilizada quando quer se destacar algo que é apenas visual, como por exemplo, deixar um link com mais visível. A tag **`<strong>`** por sua vez, além de destacar o visual, dá um destaque semântico ao texto, então se o conteúdo que você quer dar destaque é uma parte relevante do texto, utilize a tag **`<strong>`**. O mesmo vale para as tags **`<i>`** e **`<em>`**, onde a tag **`<i>`** é utilizada apenas para formatação visual e a tag **`<em>`** dá ênfase semântica ao texto, não devendo ser utilizada para uso puramente estético.
:::

## Áudio no HTML

Também podemos inserir áudio na página HTML. Para isso, utilizamos a tag **`audio`**, como listado abaixo:

``` r
<audio controls src="musica.mp3">
Seu browser não suporta áudio.
</audio>
```

O atributo **`scr`** aponta para o arquivo de áudio que será executado (MP3, OGG ou WAV). O atributo **`controls`** indica a exibição de controles para gerenciamento do áudio (botões play, pause, etc.). Outros atributos como **`autoplay`**, que faz o áudio ser executado automaticamente, e **`loop`**, para que o áudio seja executado repetidamente, também merecem destaque.

::: {.callout-note appearance="simple"}
O texto "Seu browser não suporta o áudio" será exibido caso
ele não ofereça suporte a essa tag.
:::

É possível fornecer mais de um tipo de arquivo de áudio. Nesse caso, adicionamos a tag **`source`** como no exemplo abaixo. Caso um dos áudios não seja localizado, o browser buscará imediatamento o próximo. Acesse o link do site do HTML para ver o resultado desse tipo de código.

``` r
<audio controls src="musica.mp3">
<source src="musica.ogg" type="audio/ogg">
<source src="musica.mp3" type="audio/mpeg">
</audio>
```

## Vídeo no HTML

Da mesma forma que os áudios, também podemos inserir arquivos de vídeo na página utilizando a tag **`video`**. Veja o código abaixo:

``` r
<video src="video.mp4" width="640" height="480" controls>
Seu browser não suporta vídeo HTML5.
</video>
```

A tag **`src`** indica o arquivo de vídeo a ser inserido, e as tags **`width`** e **`height`** indicam a largura e altura, respectivamente, da tela do vídeo que aparecerá na página. Quando o browser não suportar o formato mp4, aparecerá a mensagem "Seu browser não suporta vídeo HTML5.". Quando desejarmos informar mais de um tipo de formato de vídeo como opções de carregamento, adicionamos duas linhas de código com os outros tipos de vídeo. Então, os formatos suportados serão MP4, WebM e OGG. Veja e teste o código abaixo para ver o resultado.

``` r
<video width="640" height="480" controls>
<source src="video.webm" type="video/webm">
<source src="video.mp4" type="video/mp4">
</video>
```

## Div e Span no HTML

As tags **`div`** e **`span`** são bastante utilizadas no HTML com diferentes objetivos e com grande importância para a composição do layout das páginas e formatação do texto.

A tag **`div`** pode ser utilizada para agrupar elementos dentro de um bloco que pode conter dimensões e posições definidas. Por padrão, uma **`div`** não apresenta características visuais definidas, isso precisa ser feito via CSS que atribui bordas, cores, etc. A tag **`div`** automaticamente gera uma nova linha no layout semelhante a um parágrafo, ao invés de ser alocado lateralmente com os demais componentes. Veja o exemplo abaixo e execute o código no site do HTML mencionado.

``` r
<input type="text" value="input 1">
<input type="text" value="input 2">
<div><input type="text" value="input 3"></div>
<div><input type="text" value="input 4"></div>
```

A tag **`span`** também não possui nenhuma característica visual, que precisa ser definido via CSS. O **`span`** serve como um completo aos atributos do CSS que serão definidos para a página. Veja o exemplo de código abaixo para entender o uso da tag **`span`**. Verifique no site do HTML que o texto somente é modificado quando adicionamos as funções do CSS.

``` r
<p>Este é um texto com um <span>
trecho em destaque</span>.</p>
<p>
Este é um texto com um <span
style="background: #1abc9c; border-radius:5px; padding:5px">
trecho em destaque</span>.
</p>
```
